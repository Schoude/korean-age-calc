{"version":3,"sources":["main.js"],"names":["now","Date","nowClear","nowLocalDate","toLocaleDateString","westernAge","birthdayClear","birthday","thisYearBday","datepicker","document","querySelector","ageInput","addEventListener","event","target","value","parse","console","log","setCurrentYear","hasBdayAlreadyPassed","bDayClear","thisYear","getFullYear","formatBday","replace","thisYearBdayMs","difference"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,IAAIE,QAAQ,GAAG,IAAID,IAAJ,CAASD,GAAT,CAAf;AACA,IAAIG,YAAY,GAAGD,QAAQ,CAACE,kBAAT,EAAnB;AACA,IAAIC,UAAU,GAAG,IAAjB;AACA,IAAIC,aAAa,GAAG,IAApB;AACA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,YAAY,GAAG,IAAnB;AAEA,IAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAnB;AACA,IAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAjB;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,UAAAC,KAAK,EAAI;AACzCT,EAAAA,UAAU,GAAGS,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACH,CAFD;AAIAP,UAAU,CAACI,gBAAX,CAA4B,QAA5B,EAAsC,UAAAC,KAAK,EAAI;AAC7CR,EAAAA,aAAa,GAAG,IAAIL,IAAJ,CAASa,KAAK,CAACC,MAAN,CAAaC,KAAtB,CAAhB;AACAT,EAAAA,QAAQ,GAAGN,IAAI,CAACgB,KAAL,CAAWH,KAAK,CAACC,MAAN,CAAaC,KAAxB,CAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCZ,QAAhC;AACAa,EAAAA,cAAc,CAACd,aAAD,CAAd;AACAe,EAAAA,oBAAoB;AACrB,CAND;;AAQA,SAASD,cAAT,CAAyBE,SAAzB,EAAoC;AAChC,MAAIC,QAAQ,GAAG,IAAItB,IAAJ,CAASA,IAAI,CAACD,GAAL,EAAT,EAAqBwB,WAArB,EAAf;AACA,MAAIC,UAAU,GAAGH,SAAS,CAAClB,kBAAV,EAAjB;AACAI,EAAAA,YAAY,GAAGiB,UAAU,CAACC,OAAX,CAAmB,QAAnB,EAA6BH,QAA7B,CAAf;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ,EAAwBjB,YAAxB;AACH,EAED;;;AACA,SAASa,oBAAT,GAAiC;AAC7B,MAAMM,cAAc,GAAG1B,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACO,YAAD,CAAf,CAAvB;AACA,MAAMoB,UAAU,GAAID,cAAc,GAAG3B,GAArC;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BhB,YAA5B;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYX,YAAY,IAAIL,YAAhB,GAA+B,IAA/B,GAAsC,KAAlD,EAJ6B,CAM7B;AACA;AACA;AACA;AACA;AACH,EAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const now = Date.now();\r\nlet nowClear = new Date(now);\r\nlet nowLocalDate = nowClear.toLocaleDateString();\r\nlet westernAge = null;\r\nlet birthdayClear = null;\r\nlet birthday = null;\r\nlet thisYearBday = null;\r\n\r\nconst datepicker = document.querySelector('#birthday-picker');\r\nconst ageInput = document.querySelector('.age-input');\r\n\r\nageInput.addEventListener('change', event => {\r\n    westernAge = event.target.value;    \r\n})\r\n\r\ndatepicker.addEventListener('change', event => {  \r\n  birthdayClear = new Date(event.target.value);\r\n  birthday = Date.parse(event.target.value);\r\n  console.log('picked birthday:', birthday);  \r\n  setCurrentYear(birthdayClear);\r\n  hasBdayAlreadyPassed();\r\n});\r\n\r\nfunction setCurrentYear (bDayClear) {\r\n    let thisYear = new Date(Date.now()).getFullYear();\r\n    let formatBday = bDayClear.toLocaleDateString();\r\n    thisYearBday = formatBday.replace(/\\d{4}/g, thisYear);\r\n    console.log(formatBday, thisYearBday);\r\n}\r\n\r\n// check if birthday already pased, wenn true, dann Alter + 1, ansonsten Alter + 2\r\nfunction hasBdayAlreadyPassed () {\r\n    const thisYearBdayMs = Date.parse(Date(thisYearBday));\r\n    const difference =  thisYearBdayMs - now;\r\n    console.log('nowLocalDate', nowLocalDate);\r\n    console.log(thisYearBday == nowLocalDate ? true : false);\r\n    \r\n    // if (thisYearBdayMs > now) {\r\n    //     console.log(thisYearBdayMs,  now,'B-Day not yet passed');\r\n    // } else if (thisYearBdayMs < now) {\r\n    //     console.log('B-Day already passed');\r\n    // }    \r\n}\r\n\r\n\r\n\r\n// wenn true, dann Alter + 1, ansonsten Alter + 2\r\n// function isLastDayOfTheYear(now, thisYear) {\r\n//   const lastDayOfYear = new Date(`${thisYear}, 12, 31`);\r\n//   if (now - Date.parse(lastDayOfYear) < 0 ) {\r\n//       console.log('today not last day of year');\r\n//       return false;\r\n//   } else if (now - Date.parse(lastDayOfYear) === 0 ) {\r\n//     console.log('last day of year');\r\n//     return true\r\n//   } \r\n// }\r\n"]}